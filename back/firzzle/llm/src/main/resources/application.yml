server:
  port: 8082

spring:
  config:
    import: optional:file:.env[.properties]
  application:
    name: llm-server
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  ai:
    openai:
      api-key: ENC(T2d/CMHeJB/CwlAq+ID4gcQqyLTlfTzPFvtJkCKXCzQ7+bm6DmUK6gSURhSVbnwWR2FojzJSzn3F91AgrT8VYz2EIG0/j6KkyiJySQS9BUmj3NucnYiClsDAgD718VFua02pMNNY9VHIdjYP+/vrBDj6zLpAnbc/I4j+cGfM/GpZCvgKa28+6+9HfXk+/CQUf6hiPDLb7lNWU3fXXLf3BSmsZ8TGn3i071hhmISZsx0OKRDwC5u/cM5ZXxRkGDnb)
      base-url: https://api.openai.com/v1
      timeline:
        model: gpt-4o-mini
      summary:
        model: gpt-4o-mini
      learningchat:
        model: gpt-4o-mini


# 공통 설정
app:
  file-storage:
    upload-dir: /data/firzzle/uploads
  kafka:
    topic:
      content-analysis: content-analysis-topic

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  packages-to-scan: com.firzzle.llm.controller

jasypt:
  encryptor:
    bean: jasyptStringEncryptor
  secret-key: ${JASYPT_SECRET_KEY}

#eureka:
#  client:
#    enabled: false # HEAD 브랜치 설정 우선

---

# local 환경
spring:
  config:
    activate:
      on-profile: local
  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    jdbc-url: ENC(+lTxE7Jf6xDUX4EbEmIGZdpIvhpuvh7Onxzom7ocQk7tnaWh7HUUHJKv8D7FJaCodQ16ht90bAOBqaOKYqO0moYTUkmiPN/eDaY+IOXcikOD6KrDjT5g/p42qqSPYx3H45TiqQ4Y7VyU/GAqDElydTq34ZBfLNIqzyM3VnoCSiMng77175W9islbKP6My29Mz+OQjs28f/BSa+xvzjuyng==)
    username: ENC(4F57/zxTR7+cKbKWB9GOfD5lSWPM66+bnkDcIN44FYI=)
    password: ENC(gvdMztDAGBXU3MgJPamk6hN4VU0kIzf7fkKvqEflgkA=)
    maximum-pool-size: 10
  kafka:
    bootstrap-servers: ENC(XJ6DY46VjPc79rxdBRrA0QjyyzBVYQdeBtagp1pE8hlwUEBAqicJj7J6iiKJe8so)
    consumer:
      group-id: firzzle
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

qdrant:
  host: ENC(a/ouu/mzdNsTfGZEb5GtfZZxpgAiSQ96G93Z5GUSkjsIUfBQWOZNBmSGAbNB1f1TAluTD+ARvOrSzgyz1W1YZg==)
  api-key: ENC(xm/TDmm1PYlsben6eRKzYylTd6z4OrK4dGFl5DXeLAaLtrTdq2UZeHsNr8EeR7lg)

server:
  port: 8082

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: ENC(a/ouu/mzdNsTfGZEb5GtfZZxpgAiSQ96G93Z5GUSkjsIUfBQWOZNBmSGAbNB1f1TAluTD+ARvOrSzgyz1W1YZg)
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

mybatis:
  mapper-locations: classpath:mappers/**/*.xml
  type-aliases-package: com.firzzle.llm.dto,com.firzzle.common.library
  configuration:
    map-underscore-to-camel-case: true
  type-aliases:
    - alias: DataBox
      type: com.firzzle.common.library.DataBox
    - alias: RequestBox
      type: com.firzzle.common.library.RequestBox

decorator:
  datasource:
    p6spy:
      enable-logging: true

logging:
  config: classpath:logback/logback-local.xml

---

# dev 환경
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: ENC(tgaaLhoeKpaFq+gSRoyULKnpPwE85+r4rofzbTQRCUf6/+fiw3oQsl/xLNO1MnK+iBHKq1dGPR2IREaL+pDutBV84otxN7oVzh1bM8Z/lVqhr9b0mUV4WjChLf0JlDQ3XU/SHV7vOxpx9aMbp8ihFL9j1YSGM//w22GToW0lADlvS3o3WVSeje0fEB8FppsxF5Wi6762vx7PbTFLmo1OXRoFMa9d8utbitAL1l92WSI=)
    username: ENC(W0ssI5QXuEkllv3MHnpW5SQ7zkbUoHs+2xX9DngxXJI=)
    password: ENC(W0ssI5QXuEkllv3MHnpW5SQ7zkbUoHs+2xX9DngxXJI=)
    maximum-pool-size: 10
  kafka:
    bootstrap-servers: ENC(AuzpvRjsfNfXV5Re6NFHzTYnHPJYaRToi9aEpi4mjZg=)
    consumer:
      group-id: llm-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

qdrant:
  host: ENC(C2ZP/PpLLp3B7YKf4DVzfZ74Qe68l9aMK+mK6ob32jw86CGWhnGEimghMYbnaihW)
  api-key: ENC(xm/TDmm1PYlsben6eRKzYylTd6z4OrK4dGFl5DXeLAaLtrTdq2UZeHsNr8EeR7lg)

server:
  port: 8080

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # 유레카 서버 ip 로 지정
      defaultZone: ENC(a/ouu/mzdNsTfGZEb5GtfZZxpgAiSQ96G93Z5GUSkjsIUfBQWOZNBmSGAbNB1f1TAluTD+ARvOrSzgyz1W1YZg==)
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}

mybatis:
  mapper-locations: classpath:mappers/**/*.xml
  type-aliases-package: com.firzzle.llm.dto,com.firzzle.common.library
  configuration:
    map-underscore-to-camel-case: true
  type-aliases:
    - alias: DataBox
      type: com.firzzle.common.library.DataBox
    - alias: RequestBox
      type: com.firzzle.common.library.RequestBox

decorator:
  datasource:
    p6spy:
      enable-logging: false

logging:
  config: classpath:logback/logback-dev.xml

---

# production 환경
spring:
  config:
    activate:
      on-profile: production
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: ENC(tgaaLhoeKpaFq+gSRoyULKnpPwE85+r4rofzbTQRCUf6/+fiw3oQsl/xLNO1MnK+iBHKq1dGPR2IREaL+pDutBV84otxN7oVzh1bM8Z/lVqhr9b0mUV4WjChLf0JlDQ3XU/SHV7vOxpx9aMbp8ihFL9j1YSGM//w22GToW0lADlvS3o3WVSeje0fEB8FppsxF5Wi6762vx7PbTFLmo1OXRoFMa9d8utbitAL1l92WSI=)
    username: ENC(W0ssI5QXuEkllv3MHnpW5SQ7zkbUoHs+2xX9DngxXJI=)
    password: ENC(W0ssI5QXuEkllv3MHnpW5SQ7zkbUoHs+2xX9DngxXJI=)
    maximum-pool-size: 20
  kafka:
    bootstrap-servers: ENC(XJ6DY46VjPc79rxdBRrA0QjyyzBVYQdeBtagp1pE8hlwUEBAqicJj7J6iiKJe8so)
    consumer:
      group-id: llm-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

qdrant:
  host: ENC(C2ZP/PpLLp3B7YKf4DVzfZ74Qe68l9aMK+mK6ob32jw86CGWhnGEimghMYbnaihW)
  api-key: ENC(xm/TDmm1PYlsben6eRKzYylTd6z4OrK4dGFl5DXeLAaLtrTdq2UZeHsNr8EeR7lg)

server:
  port: 8080

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      # 유레카 서버 ip 로 지정
      defaultZone: ENC(/41tljZDMZpNgXvM80gXVFmnDrDcBQHNU53N4cED7Drjo5iU+IAIIY+V62fqdY1D/7hAmAbMLJruMqrwTpvDkA==)
  instance:
    preferIpAddress: true
    ip-address: ENC(5IT1nt5OqCBjYMDxZhtVLY5mBWFTmHTcFKm74jqKV54nDpETIeydg3WO0Ftt8Pkb)
    non-secure-port: ${SERVER_PORT:8082}  # 명시적으로 포트 지정
    securePortEnabled: false
    healthCheckUrl: http://ENC(5IT1nt5OqCBjYMDxZhtVLY5mBWFTmHTcFKm74jqKV54nDpETIeydg3WO0Ftt8Pkb):${SERVER_PORT:8082}/actuator/health
    homePageUrl: http://ENC(5IT1nt5OqCBjYMDxZhtVLY5mBWFTmHTcFKm74jqKV54nDpETIeydg3WO0Ftt8Pkb):${SERVER_PORT:8082}/
    instanceId: llm-server:ENC(5IT1nt5OqCBjYMDxZhtVLY5mBWFTmHTcFKm74jqKV54nDpETIeydg3WO0Ftt8Pkb):${SERVER_PORT:8082}

mybatis:
  mapper-locations: classpath:mappers/**/*.xml
  type-aliases-package: com.firzzle.llm.dto,com.firzzle.common.library
  configuration:
    map-underscore-to-camel-case: true
  type-aliases:
    - alias: DataBox
      type: com.firzzle.common.library.DataBox
    - alias: RequestBox
      type: com.firzzle.common.library.RequestBox

decorator:
  datasource:
    p6spy:
      enable-logging: false

logging:
  config: classpath:logback/logback-production.xml
