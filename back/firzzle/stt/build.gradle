plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.firzzle'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    // === Spring Boot 기본 스타터 ===
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'

    // === Kafka ===
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'org.apache.kafka:kafka-streams'

    // === Eureka ===
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation platform('org.springframework.cloud:spring-cloud-dependencies:2024.0.0')

    // === Swagger / OpenAPI ===
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

    // === MyBatis ===
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'

    // === P6Spy ===
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

    // === Jasypt (보안 암호화) ===
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'

    // === Lombok ===
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // === 공통 모듈 ===
    implementation project(':common')
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
    // implementation project(':user-domain') // 필요시 주석 해제
    
    //implementation("io.netty:netty-resolver-dns:4.1.100.Final")

    // === 테스트 ===
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// === 공통 리소스 복사 ===
processResources {
    from project(':common').sourceSets.main.resources.matching {
        include 'messages/**'
        include 'logback/**'
        include 'mapper/common/**'
        include 'banner.txt'
        include 'log4jdbc.log4j2.properties'
        include 'spy.properties'
    }
}

// === JAR 설정 ===
bootJar {
    enabled = true
}

jar {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}
