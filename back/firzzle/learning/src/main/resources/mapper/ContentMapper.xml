<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ContentMapper">

    <!-- 결과 매핑 정의 -->
    <resultMap id="ContentResultMap" type="com.firzzle.learning.dto.ContentResponseDTO">
        <id property="contentSeq" column="content_seq" />
        <result property="title" column="title" />
        <result property="description" column="description" />
        <result property="contentType" column="category" />
        <result property="videoId" column="video_id" />
        <result property="url" column="url" />
        <result property="thumbnailUrl" column="thumbnail_url" />
        <result property="duration" column="duration" />
        <result property="processStatus" column="process_status" />
        <result property="createdAt" column="created_at" />
        <result property="completedAt" column="completed_at" />
        <result property="tags" column="tags" />
        <result property="deleteYn" column="delete_yn" />
    </resultMap>

    <!-- 공통 컬럼 정의 -->
    <sql id="contentColumns">
        C.content_seq,
        C.video_id,
        C.url,
        C.title,
        C.description,
        C.category,
        C.thumbnail_url,
        C.duration,
        C.process_status,
        C.created_at,
        C.completed_at,
        C.delete_yn,
        (SELECT GROUP_CONCAT(tag SEPARATOR ',') FROM fb_ai_content_tags WHERE content_seq = C.content_seq) AS tags
    </sql>

    <!-- 콘텐츠 등록 -->
    <insert id="insertContent" parameterType="com.firzzle.learning.dto.ContentResponseDTO" useGeneratedKeys="true" keyProperty="contentSeq">
        INSERT INTO fb_ai_contents (
            video_id,
            url,
            title,
            description,
            category,
            thumbnail_url,
            duration,
            process_status,
            created_at
        ) VALUES (
                     #{videoId},
                     #{url},
                     #{title},
                     #{description},
                     #{contentType},
                     #{thumbnailUrl},
                     #{duration},
                     #{processStatus, jdbcType=CHAR},
                     NOW()
                 )
    </insert>

    <!-- 콘텐츠 태그 등록 -->
    <insert id="insertContentTags">
        INSERT INTO fb_ai_content_tags (
        content_seq,
        tag
        ) VALUES
        <foreach collection="tags" item="tag" separator=",">
            (#{contentSeq}, #{tag})
        </foreach>
    </insert>

    <!-- 콘텐츠 정보 조회 -->
    <select id="selectContent" resultMap="ContentResultMap" parameterType="Long">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.content_seq = #{contentSeq}
        AND C.delete_yn = 'N'
    </select>

    <!-- 콘텐츠 정보 조회 (DataBox 반환) -->
    <select id="selectContentDataBox" resultType="DataBox" parameterType="RequestBox">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.content_seq = #{contentSeq}
        AND C.delete_yn = 'N'
    </select>

    <!-- 콘텐츠 목록 조회 -->
    <select id="selectContentList" resultMap="ContentResultMap" parameterType="com.firzzle.common.request.PageRequestDTO">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.delete_yn = 'N'
        <if test="keyword != null and keyword != ''">
            AND (
            C.title LIKE CONCAT('%', #{keyword}, '%')
            OR C.description LIKE CONCAT('%', #{keyword}, '%')
            OR EXISTS (
            SELECT 1 FROM fb_ai_content_tags T
            WHERE T.content_seq = C.content_seq
            AND T.tag LIKE CONCAT('%', #{keyword}, '%')
            )
            )
        </if>
        <if test="params != null and params.category != null">
            AND C.category = #{params.category}
        </if>
        <if test="params != null and params.status != null">
            AND C.process_status = #{params.status}
        </if>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                <choose>
                    <when test="orderBy == 'createdAt'">C.created_at</when>
                    <when test="orderBy == 'title'">C.title</when>
                    <otherwise>C.created_at</otherwise>
                </choose>
            </when>
            <otherwise>C.created_at</otherwise>
        </choose>
        <choose>
            <when test="orderDirection != null and orderDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{offset}, #{size}
    </select>

    <!-- 콘텐츠 목록 조회 (DataBox 반환) -->
    <select id="selectContentListDataBox" resultType="DataBox" parameterType="RequestBox">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.delete_yn = 'N'
        <if test="keyword != null and keyword != ''">
            AND (
            C.title LIKE CONCAT('%', #{keyword}, '%')
            OR C.description LIKE CONCAT('%', #{keyword}, '%')
            OR EXISTS (
            SELECT 1 FROM fb_ai_content_tags T
            WHERE T.content_seq = C.content_seq
            AND T.tag LIKE CONCAT('%', #{keyword}, '%')
            )
            )
        </if>
        <if test="category != null and category != ''">
            AND C.category = #{category}
        </if>
        <if test="status != null and status != ''">
            AND C.process_status = #{status}
        </if>
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                <choose>
                    <when test="orderBy == 'createdAt'">C.created_at</when>
                    <when test="orderBy == 'title'">C.title</when>
                    <otherwise>C.created_at</otherwise>
                </choose>
            </when>
            <otherwise>C.created_at</otherwise>
        </choose>
        <choose>
            <when test="orderDirection != null and orderDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{offset}, #{size}
    </select>

    <!-- 콘텐츠 개수 조회 -->
    <select id="selectContentCount" resultType="int" parameterType="Object">
        SELECT
        COUNT(*)
        FROM
        fb_ai_contents C
        WHERE
        C.delete_yn = 'N'
        <if test="keyword != null and keyword != ''">
            AND (
            C.title LIKE CONCAT('%', #{keyword}, '%')
            OR C.description LIKE CONCAT('%', #{keyword}, '%')
            OR EXISTS (
            SELECT 1 FROM fb_ai_content_tags T
            WHERE T.content_seq = C.content_seq
            AND T.tag LIKE CONCAT('%', #{keyword}, '%')
            )
            )
        </if>
        <if test="params != null and params.category != null">
            AND C.category = #{params.category}
        </if>
        <if test="params != null and params.status != null">
            AND C.process_status = #{params.status}
        </if>
        <if test="category != null and category != ''">
            AND C.category = #{category}
        </if>
        <if test="status != null and status != ''">
            AND C.process_status = #{status}
        </if>
    </select>

    <!-- 콘텐츠 정보 수정 -->
    <update id="updateContent" parameterType="com.firzzle.learning.dto.ContentResponseDTO">
        UPDATE fb_ai_contents
        SET
        title = #{title},
        description = #{description},
        category = #{contentType}
        <if test="thumbnailUrl != null">, thumbnail_url = #{thumbnailUrl}</if>
        <if test="duration != null">, duration = #{duration}</if>
        WHERE
        content_seq = #{contentSeq}
    </update>

    <!-- 콘텐츠 정보 수정 (RequestBox 사용) -->
    <update id="updateContentBox" parameterType="RequestBox">
        UPDATE fb_ai_contents
        SET
        title = #{title},
        description = #{description},
        category = #{category}
        <if test="thumbnailUrl != null and thumbnailUrl != ''">, thumbnail_url = #{thumbnailUrl}</if>
        <if test="duration != null and duration != ''">, duration = #{duration}</if>
        WHERE
        content_seq = #{contentSeq}
    </update>

    <!-- 콘텐츠 삭제 -->
    <update id="deleteContent" parameterType="Long">
        UPDATE fb_ai_contents
        SET delete_yn = 'Y'
        WHERE content_seq = #{contentSeq}
    </update>

    <!-- 콘텐츠 분석 상태 업데이트 -->
    <update id="updateAnalysisStatus" parameterType="Object">
        UPDATE fb_ai_contents
        SET
        process_status = #{status}
        <if test="status == 'C'">, completed_at = NOW()</if>
        <if test="analysisData != null">, analysis_data = #{analysisData}</if>
        WHERE
        content_seq = #{contentSeq}
    </update>

    <!-- YouTube ID로 콘텐츠 존재 여부 확인 -->
    <select id="selectCountByVideoId" resultType="int" parameterType="String">
        SELECT COUNT(*)
        FROM fb_ai_contents
        WHERE video_id = #{videoId}
          AND delete_yn = 'N'
    </select>

    <!-- 태그별 콘텐츠 목록 조회 -->
    <select id="selectContentListByTag" resultMap="ContentResultMap">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.delete_yn = 'N'
        AND EXISTS (
        SELECT 1 FROM fb_ai_content_tags T
        WHERE T.content_seq = C.content_seq
        AND T.tag = #{tag}
        )
        ORDER BY
        <choose>
            <when test="pageRequestDTO.orderBy != null and pageRequestDTO.orderBy != ''">
                <choose>
                    <when test="pageRequestDTO.orderBy == 'createdAt'">C.created_at</when>
                    <when test="pageRequestDTO.orderBy == 'title'">C.title</when>
                    <otherwise>C.created_at</otherwise>
                </choose>
            </when>
            <otherwise>C.created_at</otherwise>
        </choose>
        <choose>
            <when test="pageRequestDTO.orderDirection != null and pageRequestDTO.orderDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{pageRequestDTO.offset}, #{pageRequestDTO.size}
    </select>

    <!-- 태그별 콘텐츠 목록 조회 (DataBox 반환) -->
    <select id="selectContentListByTagDataBox" resultType="DataBox" parameterType="RequestBox">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.delete_yn = 'N'
        AND EXISTS (
        SELECT 1 FROM fb_ai_content_tags T
        WHERE T.content_seq = C.content_seq
        AND T.tag = #{tag}
        )
        ORDER BY
        <choose>
            <when test="orderBy != null and orderBy != ''">
                <choose>
                    <when test="orderBy == 'createdAt'">C.created_at</when>
                    <when test="orderBy == 'title'">C.title</when>
                    <otherwise>C.created_at</otherwise>
                </choose>
            </when>
            <otherwise>C.created_at</otherwise>
        </choose>
        <choose>
            <when test="orderDirection != null and orderDirection == 'ASC'">ASC</when>
            <otherwise>DESC</otherwise>
        </choose>
        LIMIT #{offset}, #{size}
    </select>
</mapper>