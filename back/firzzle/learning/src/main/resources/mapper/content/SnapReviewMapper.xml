<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SnapReviewMapper">

    <!-- 공통 컬럼 정의 -->
    <sql id="contentColumns">
        C.content_seq,
        C.video_id,
        C.url,
        C.title,
        C.description,
        C.category,
        C.thumbnail_url,
        C.duration,
        C.process_status,
        C.indate,
        C.completed_at,
        C.delete_yn
    </sql>

    <!-- 콘텐츠 존재 여부 확인 -->
    <select id="selectContentCount" resultType="int" parameterType="RequestBox">
        SELECT COUNT(*)
        FROM fb_ai_contents
        WHERE content_seq = #{contentSeq}
          AND delete_yn = 'N'
    </select>

    <!-- 콘텐츠 정보 조회 -->
    <select id="selectContentDataBox" resultType="DataBox" parameterType="RequestBox">
        SELECT
        <include refid="contentColumns" />
        FROM
        fb_ai_contents C
        WHERE
        C.content_seq = #{contentSeq}
        AND C.delete_yn = 'N'
    </select>

    <!-- 사용자 콘텐츠 정보를 통해 콘텐츠 정보 조회 -->
    <select id="selectContentByUserContentSeq" resultType="DataBox" parameterType="RequestBox">
        SELECT
            C.content_seq,
            C.video_id,
            C.url,
            C.title,
            C.description,
            C.category,
            C.thumbnail_url,
            C.duration,
            C.process_status,
            C.indate,
            C.completed_at,
            C.delete_yn,
            UC.progress,
            UC.last_accessed_at
            , UC.user_content_seq
        FROM
            fb_ai_user_contents UC
                JOIN
            fb_ai_contents C ON UC.content_seq = C.content_seq
        WHERE
            UC.user_content_seq = #{userContentSeq}
          AND UC.user_seq = get_user_seq_by_uuid(#{uuid})
          AND C.delete_yn = 'N'
    </select>

    <!-- 사용자 스냅리뷰 조회 -->
    <select id="selectUserSnapReviewByContent" resultType="DataBox" parameterType="RequestBox">
        SELECT
            USR.user_snap_review_seq,
            USR.user_seq,
            USR.content_seq,
            USR.frame_seq,
            USR.comment,
            USR.indate,
            USR.ldate
        FROM
            fb_ai_user_snap_reviews USR
        WHERE
            USR.content_seq = #{contentSeq}
          AND USR.user_seq = get_user_seq_by_uuid(#{uuid})
        ORDER BY
            USR.indate DESC
            LIMIT 1
    </select>

    <!-- 사용자 스냅리뷰 등록 -->
    <insert id="insertUserSnapReview" parameterType="RequestBox" useGeneratedKeys="true" keyProperty="userSnapReviewSeq">
        INSERT INTO fb_ai_user_snap_reviews (
            user_seq,
            content_seq,
            frame_seq,
            comment,
            indate,
            ldate
        ) VALUES (
                     get_user_seq_by_uuid(#{uuid}),
                     #{contentSeq},
                     NULL,
                     NULL,
                     #{indate},
                     #{indate}
                 )
    </insert>

    <!-- 콘텐츠별 프레임 목록 조회 -->
    <select id="selectFramesByContent" resultType="DataBox" parameterType="RequestBox">
        SELECT
            F.frame_seq,
            F.content_seq,
            F.image_url,
            F.timestamp,
            F.indate,
            F.ldate,
            USR.comment AS comment
        FROM
            fb_ai_frames F
                LEFT JOIN (
                SELECT frame_seq, comment
                FROM fb_ai_user_snap_reviews
                WHERE user_seq = get_user_seq_by_uuid(#{uuid})
                  AND content_seq = #{contentSeq}
            ) USR ON F.frame_seq = USR.frame_seq
        WHERE
            F.content_seq = #{contentSeq}
        ORDER BY
            F.timestamp ASC
    </select>

    <!-- 콘텐츠별 프레임 목록 조회 -->
    <select id="selectFramesByUserSeqContent" resultType="DataBox" parameterType="RequestBox">
        SELECT
            F.frame_seq,
            F.content_seq,
            F.image_url,
            F.timestamp,
            F.indate,
            F.ldate,
            USR.comment AS comment
        FROM
            fb_ai_frames F
                LEFT JOIN (
                SELECT frame_seq, comment
                FROM fb_ai_user_snap_reviews
                WHERE user_seq = get_user_seq_by_uuid(#{uuid})
                  AND content_seq = #{contentSeq}
            ) USR ON F.frame_seq = USR.frame_seq
        WHERE
            F.content_seq = #{contentSeq}
        ORDER BY
            F.timestamp ASC
    </select>

    <!-- 프레임 및 콘텐츠별 사용자 스냅리뷰 조회 -->
    <select id="selectUserSnapReviewByFrameAndContent" resultType="DataBox" parameterType="RequestBox">
        SELECT
            USR.user_snap_review_seq as user_snap_review_seq,
            USR.user_seq as user_seq,
            USR.content_seq as content_seq,
            USR.frame_seq as frame_seq,
            USR.comment as comment,
            USR.indate as indate,
            USR.ldate as ldate
        FROM
            fb_ai_user_snap_reviews USR
        WHERE
            USR.content_seq = #{contentSeq}
          AND USR.frame_seq = #{frameSeq}
          AND USR.user_seq = get_user_seq_by_uuid(#{uuid})
            LIMIT 1
    </select>

    <!-- 프레임 정보가 포함된 사용자 스냅리뷰 등록 -->
    <insert id="insertUserSnapReviewWithFrame" parameterType="RequestBox">
        INSERT INTO fb_ai_user_snap_reviews (
            user_seq,
            content_seq,
            frame_seq,
            comment,
            indate,
            ldate
        ) VALUES (
                     get_user_seq_by_uuid(#{uuid}),
                     #{contentSeq},
                     #{frameSeq},
                     #{comment},
                     #{indate},
                     #{indate}
                 )
    </insert>

    <!-- 프레임 정보 조회 -->
    <select id="selectFrameBySeq" resultType="DataBox" parameterType="RequestBox">
        SELECT
            F.frame_seq,
            F.content_seq,
            F.image_url,
            F.timestamp,
            F.indate,
            F.ldate
        FROM
            fb_ai_frames F
        WHERE
            F.frame_seq = #{frameSeq}
          AND F.content_seq = #{contentSeq}
    </select>

    <!-- 프레임 정보 수정 -->
    <update id="updateFrame" parameterType="RequestBox">
        UPDATE fb_ai_frames
        SET
            ldate = #{ldate}
        WHERE
            frame_seq = #{frameSeq}
    </update>

    <!-- 콘텐츠 및 프레임 목록 조회 (PageMapper 활용) -->
    <select id="selectContentListWithFrames" resultType="DataBox" parameterType="RequestBox">
        <include refid="PageMapper.spage"/>
        SELECT
        <include refid="PageMapper.sorder"/>
        ORDER BY
        <choose>
            <when test="p_order != null and p_order != ''">
                <choose>
                    <when test="p_order == 'indate'">C.indate</when>
                    <when test="p_order == 'title'">C.title</when>
                    <otherwise>C.indate</otherwise>
                </choose>
                <choose>
                    <when test="p_sortorder != null and p_sortorder == 'ASC'">ASC</when>
                    <otherwise>DESC</otherwise>
                </choose>
            </when>
            <otherwise>C.indate DESC</otherwise>
        </choose>
        <include refid="PageMapper.eorder"/>
        C.content_seq,
        C.title AS content_title,
        C.category,
        C.thumbnail_url,
        C.indate,
        (SELECT COUNT(*) FROM fb_ai_frames F WHERE F.content_seq = C.content_seq) AS frame_count,
        (SELECT F.image_url FROM fb_ai_frames F WHERE F.content_seq = C.content_seq ORDER BY F.timestamp ASC LIMIT 1) AS representative_image_url
        , UC.user_content_seq
        FROM
        fb_ai_user_contents UC
        INNER JOIN fb_ai_contents C ON UC.content_seq = C.content_seq
        WHERE
        UC.user_seq = get_user_seq_by_uuid(#{uuid})
        AND C.delete_yn = 'N'
        AND C.process_status = 'C'
        <if test="keyword != null and keyword != ''">
            AND (
            C.title LIKE CONCAT('%', #{keyword}, '%')
            OR C.description LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        <if test="category != null and category != ''">
            AND C.category = #{category}
        </if>
        <include refid="PageMapper.epage"/>
    </select>

    <!-- 콘텐츠 및 프레임 개수 조회 -->
    <select id="selectContentWithFramesCount" resultType="int" parameterType="RequestBox">
        SELECT COUNT(*)
        FROM
        fb_ai_user_contents UC
        INNER JOIN fb_ai_contents C ON UC.content_seq = C.content_seq
        WHERE
        UC.user_seq = get_user_seq_by_uuid(#{uuid})
        AND C.delete_yn = 'N'
        AND C.process_status = 'C'
        <if test="keyword != null and keyword != ''">
            AND (
            C.title LIKE CONCAT('%', #{keyword}, '%')
            OR C.description LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        <if test="category != null and category != ''">
            AND C.category = #{category}
        </if>
    </select>

    <!-- 공유 코드 등록 -->
    <insert id="insertShareCode" parameterType="RequestBox">
        INSERT INTO fb_ai_share_codes (
            share_code,
            content_seq,
            user_seq,
            delete_yn,
            indate
        ) VALUES (
                     #{shareCode},
                     #{contentSeq},
                     get_user_seq_by_uuid(#{uuid}),
                     'N',
                     #{indate}
                 )
    </insert>

    <!-- 공유 코드 정보 조회 -->
    <select id="selectShareCodeDataBox" resultType="DataBox" parameterType="RequestBox">
        SELECT
            SC.share_code,
            SC.content_seq,
            SC.delete_yn,
            SC.indate
        FROM
            fb_ai_share_codes SC
        WHERE
            SC.content_seq = #{contentSeq}
          AND SC.user_seq = get_user_seq_by_uuid(#{uuid})
          AND SC.delete_yn = 'N'
        ORDER BY
            SC.indate DESC
            LIMIT 1
    </select>

    <!-- 사용자 스냅리뷰 코멘트 업데이트 -->
    <update id="updateUserSnapReviewComment" parameterType="RequestBox">
        UPDATE fb_ai_user_snap_reviews
        SET
            comment = #{comment},
            ldate = #{ldate}
        WHERE
            user_snap_review_seq = #{userSnapReviewSeq}
          AND user_seq = get_user_seq_by_uuid(#{uuid})
    </update>

    <!-- 특정 사용자의 프레임 및 콘텐츠별 스냅리뷰 조회 -->
    <select id="selectUserSnapReviewByFrameAndUserSeq" resultType="DataBox" parameterType="RequestBox">
        SELECT
            USR.user_snap_review_seq as user_snap_review_seq,
            USR.user_seq as user_seq,
            USR.content_seq as content_seq,
            USR.frame_seq as frame_seq,
            USR.comment as comment,
            USR.indate as indate,
            USR.ldate as ldate
        FROM
            fb_ai_user_snap_reviews USR
        WHERE
            USR.content_seq = #{contentSeq}
          AND USR.frame_seq = #{frameSeq}
          AND USR.user_seq = #{userSeq}
            LIMIT 1
    </select>

    <!-- 공유된 사용자의 프레임 및 콘텐츠별 스냅리뷰 조회 -->
    <select id="selectUserSnapReviewBySharedUser" resultType="DataBox" parameterType="RequestBox">
        SELECT
            USR.user_snap_review_seq as user_snap_review_seq,
            USR.user_seq as user_seq,
            USR.content_seq as content_seq,
            USR.frame_seq as frame_seq,
            USR.comment as comment,
            USR.indate as indate,
            USR.ldate as ldate
        FROM
            fb_ai_user_snap_reviews USR
        WHERE
            USR.content_seq = #{contentSeq}
          AND USR.frame_seq = #{frameSeq}
          AND USR.user_seq = #{sharedUserSeq}
            LIMIT 1
    </select>

    <!-- 공유 코드 존재 여부 확인 (사용자 시퀀스 포함) -->
    <select id="checkShareCodeExists" resultType="DataBox" parameterType="RequestBox">
        SELECT
            share_code as share_code,
            content_seq as content_seq,
            user_seq as user_seq,
            indate as indate
        FROM
            fb_ai_share_codes
        WHERE
            share_code = #{shareCode}
          AND delete_yn = 'N'
            LIMIT 1
    </select>

    <!-- 공유 코드 존재 여부 확인 (user content seq + uuid) -->
    <select id="checkShareCodeExistsByContent" resultType="DataBox" parameterType="RequestBox">
        SELECT
            sc.share_code as share_code,
            sc.content_seq as content_seq,
            sc.user_seq as user_seq,
            sc.indate as indate
        FROM
            fb_ai_share_codes sc
        LEFT JOIN
            fb_ai_user_contents uc ON (sc.content_seq = uc.content_seq AND sc.user_seq = uc.user_seq)
        WHERE
            uc.user_content_seq = #{userContentSeq}
          AND sc.user_seq = get_user_seq_by_uuid(#{uuid})
          AND sc.delete_yn = 'N'
        LIMIT 1
    </select>

    <!-- 공유 코드 정보 조회 -->
    <select id="getShareCodeInfo" resultType="DataBox" parameterType="RequestBox">
        SELECT
            share_code as share_code,
            content_seq as content_seq,
            user_seq as user_seq,
            indate as indate,
            delete_yn as delete_yn
        FROM
            fb_ai_share_codes
        WHERE
            share_code = #{shareCode}
    </select>

    <!-- 공유 코드 취소 (논리적 삭제) -->
    <update id="cancelShareCode" parameterType="RequestBox">
        UPDATE
            fb_ai_share_codes
        SET
            delete_yn = 'Y'
        WHERE
            share_code = #{shareCode}
          AND user_seq = get_user_seq_by_uuid(#{uuid})
    </update>

</mapper>