spring:
  # .env import
  data:
  # PostgreSQL 설정
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${LOCAL_DB_HOST:localhost}:${LOCAL_DB_PORT:5432}/${LOCAL_DB_NAME}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&useUniCode=yes&characterEncoding=UTF-8
    username: ${LOCAL_DB_USERNAME}
    password: ${LOCAL_DB_PASSWORD}
    hikari:
      auto-commit: true
      connection-timeout: 5000
      idle-timeout: 300000        # 5분
      max-lifetime: 600000        # 10분
      maximum-pool-size: 10       # 최대 10개 연결
      minimum-idle: 2             # 최소 2개 연결 유지
      validation-timeout: 5000
  # JPA 설정 추가
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: true
    hibernate:
      ddl-auto: none  # 로컬 환경에서는 validate 권장
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        highlight_sql: true  # SQL 로그 하이라이팅 활성화
#  rabbitmq:
#    host: localhost
#    port: 5672
#    username: guest
#    password: guest

# 쿠키 설정
cookie:
  secure: false
  site: "Strict"

# 로컬 환경 로깅 설정
logging:
  config: classpath:log4j2-local.xml
  level:
    # root: DEBUG                      # 전체 시스템 로깅 레벨 → INFO로 변경: 너무 많은 로그 출력으로 인한 가독성 저하 문제 해결
    root: INFO
    com.rabbit: DEBUG                  # 프로젝트 패키지 로깅: 애플리케이션 비즈니스 로직 관련 로그 - 유지
    # org.springframework.web: DEBUG   # 스프링 웹 MVC 관련 로그(HTTP 요청/응답, 핸들러 매핑 등) → INFO로 변경: 요청마다 발생하는 과도한 로그 감소
    org.springframework.web: DEBUG
    # org.springframework.security: DEBUG  # 스프링 시큐리티 관련 로그(인증, 권한 검사, 필터 체인 등) → INFO로 변경: 인증 과정의 상세 디버그 정보 감소
    org.springframework.security: DEBUG
    # org.springframework.orm.jpa: DEBUG    # JPA EntityManager 관련 로그 → INFO로 변경: 매 요청마다 발생하는 EntityManager 생성/종료 로그 감소
    org.springframework.orm.jpa: DEBUG
    # org.springframework.transaction: DEBUG # 트랜잭션 관리 로그 → INFO로 변경: 트랜잭션 시작/종료/롤백 관련 상세 로그 감소
    org.springframework.transaction: DEBUG
    org.hibernate.SQL: DEBUG           # 실행되는 모든 SQL 쿼리 로그 - 유지: SQL 디버깅은 개발 과정에서 중요하므로 그대로 유지
    # org.hibernate.type.descriptor.sql: TRACE  # SQL 쿼리의 바인딩 파라미터 값 로그 → INFO로 변경: 쿼리마다 출력되는 과도한 파라미터 로깅 감소
    org.hibernate.type.descriptor.sql: TRACE
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE  # SQL 바인딩 파라미터 세부 로깅 - 제거: type.descriptor.sql로 통합하여 중복 설정 제거
    com.zaxxer.hikari.pool: DEBUG       # 커넥션 풀 상태 및 관리 로그 - 유지: 커넥션 생성/폐기 정보는 유용하므로 유지
    sun.rmi: WARN                      # 원격 메소드 호출 관련 로그 - 유지: 경고 수준만 보는 것으로 충분
    # 추가 로깅 설정
    org.apache.catalina: DEBUG          # 추가: Tomcat 서블릿 컨테이너 로그 - 서버 시작/종료 및 요청 처리 과정의 과도한 디버그 로그 방지
    org.postgresql: DEBUG               # 추가: PostgreSQL JDBC 드라이버 로그 - DB 연결 과정의 반복적인 로그 출력 방지
    org.apache.catalina.util.LifecycleBase: WARN  # 추가: Tomcat 컴포넌트 생명주기 로그 - 서버 시작 시 발생하는 수많은 'Setting state for' 로그 제거