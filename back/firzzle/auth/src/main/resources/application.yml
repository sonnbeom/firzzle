eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
#      defaultZone: http://localhost:8761/eureka
      defaultZone: http://eureka-server:8761/eureka/
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}


# application.yml - 통합 환경 설정 파일
# Jasypt 설정
jasypt:
  encryptor:
    bean: jasyptStringEncryptor
  secrete-key: ${JASYPT_SECRET_KEY}

# -----------------------------------------
# 공통 설정 (Common) 프로필
# -----------------------------------------
---

# 애플리케이션 기본 설정
application:
  name: auth-server

# 트랜잭션 설정
transaction:
  default-timeout: 60  # 기본 트랜잭션 타임아웃 (초)

# 데이터베이스 설정
datasource:
  driver-class-name: com.mysql.cj.jdbc.Driver
  jdbc-url: ENC(DUMgTK/7Hbs13JBO3h2A1VKdejCReOw00Jplr5M4Tl5PnGpHEu0ekef9RAiZRKxWgZEghbAV1vFRgSJA4QFlQA==)
  username: ENC(7hxyFwQ8LzNDka98TeYQKEdeBi0VUM1ZmQ8Is7Kv7Wc=)
  password: ENC(KTnBw2HbIBx75vyJBnu0Pu3A9udPxZ1iA2cvqepwQjUN5aI4qDmZdjOI+DM/jmbD)
  maximum-pool-size: 20
  hikari:
    query-timeout: 30               # SQL 쿼리 타임아웃 (30초)
    # auto-commit: true
    # connection-init-sql: SELECT 1
    # connection-timeout: 5000
    # idle-timeout: 600000
    # max-lifetime: 1200000
    # minimum-idle: 50
    # validation-timeout: 5000

# MVC 설정
mvc:
  path-match:
    matching-strategy: ant_path_matcher

# Jackson 설정
jackson:
  date-format: yyyy-MM-dd HH:mm:ss
  property-naming-strategy: LOWER_CAMEL_CASE
  serialization:
    fail-on-empty-beans: false
    write-dates-as-timestamps: false  # ISO-8601 형식으로 날짜 직렬화
  time-zone: Asia/Seoul

# 파일 업로드 설정
servlet:
  multipart:
    enabled: true
    max-file-size: 5000MB          # 단일 파일의 최대 크기 (5GB)
    max-request-size: 5000MB       # 요청당 최대 파일 크기 (5GB)
    file-size-threshold: 2KB       # 파일이 메모리에 기록되는 임계값
    location: /tmp                 # 업로드된 파일의 임시 저장 경로
    resolve-lazily: false

# 세션 설정
session:
  timeout: 60m  # 세션 만료 시간 (60분)
  store-type: none

# 쿠키 설정
cookie:
  http-only: true  # 보안 강화를 위해 HttpOnly 설정

# 메일 설정
mail:
  host: smtp.gmail.com
  port: 587
  username: ${GMAIL_USERNAME:}
  password: ${GMAIL_PASSWORD:}
  properties:
    mail:
      smtp:
        auth: true
        starttls:
          enable: true
          required: true
        connection-timeout: 5000
        timeout: 5000
        write-timeout: 5000

# 정적 리소스 설정은 사용하지 않음
# web:
#   resources:
#     static-path-pattern: /file/**
#     static-locations: file:${user.home}/Downloads/uploads/

# RabbitMQ 설정
rabbitmq:
  host: ${RABBITMQ_HOST:localhost}
  port: 5672
  username: ${RABBITMQ_USERNAME:guest}
  password: ${RABBITMQ_PASSWORD:guest}


# P6Spy 설정 (SQL 로깅)
decorator:
  datasource:
    p6spy:
      enable-logging: true

# 서버 설정
#server:
#  port: 8080
#  servlet:
#    context-path: /
#    encoding:
#      charset: UTF-8
#      enabled: true
#      force: true
#    session:
#      persistent: false
#  tomcat:
#    max-swallow-size: -1    # 실패한 파일 업로드 요청의 남은 데이터를 계속 읽을지 결정 (-1: 제한없음)
#    max-http-form-post-size: 10MB    # POST 요청의 최대 허용 크기
#    connection-timeout: 20000     # 클라이언트 연결 수립 대기 시간 (20초)
#    accept-count: 25            # 모든 스레드가 사용 중일 때 대기열 크기 (max-threads의 50%)
#    threads:
#      max: 50
#      min-spare: 10
#  forward-headers-strategy: native    # 프록시/로드밸런서 환경에서 클라이언트 IP와 프로토콜 정보를 가져올 헤더 지정

# 내부 인터페이스 설정 (주석 처리)
# internal-interface:
#   baseUrl: http://localhost:8080

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: prometheus

# 배치 설정
batch:
  enable: ${batchEnable:false}

# 파일 업로드 경로 설정 (주석 처리)
# file:
#   upload:
#     path: ${user.home}/Downloads/uploads/

# 메일 인증 설정 (주석 처리)
# mail:
#   verification:
#     ttl: 5  # 인증 코드 유효 시간 (분)
#   password:
#     ttl: 1440  # 임시 비밀번호 유효 시간 (분) (24시간 = 60 * 24 = 1440)

# API 문서 설정 (Swagger/OpenAPI)
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    disable-swagger-default-url: true
    url: /v3/api-docs
    groups-order: DESC
    operationsSorter: method
    tagsSorter: alpha
  group-configs:
    - group: v1
      paths-to-match: /api/v1/**
    # - group: v2
    #   paths-to-match: /api/v2/**
  packages-to-scan: com.firzzle

# JWT 설정
jwt:
  access-token-expiration-seconds: 1800
  refresh-token-expiration-seconds: 2419200
  access-token-refresh-threshold: 300000
  secret: ${JWT_SECRET:default_jwt_secret_key_for_development}

# CORS 허용 origin
cors:
  allowed-origins:
    - "http://localhost:8080"
    - "http://localhost:5173"
    - "http://127.0.0.1:5500"
#    - "https://j12s301.p.ssafy.io"

# TOSS 설정 (주석 처리)
# toss:
#   secret: ${TOSS_SECRET:}

# 파일 설정
#app:
#  file:
#    upload-path: ${user.home}/Downloads/uploads
#    max-file-size: 10485760  # 10MB
#    allowed-extensions:
#      - jpg
#      - jpeg
#      - png
#      - gif
#      - pdf
#      - doc
#      - docx
#      - xls
#      - xlsx
#  encryption:
#    master-key: ${ENCRYPTION_MASTER_KEY}

# OAuth2 설정
oauth2:
  user:
    kakao:
      client-id: ENC(tlaNQpvPlVcuwHy9dKNL94bIzuNYNrNQC/z9g1sxlkDPWFHAN5ZzhOhS1yV2CM5qv9nsl73rpJFlj+QYcbnS6g==)
  provider:
    kakao:
      authorize-uri: https://kauth.kakao.com/oauth/authorize
      token-uri: https://kauth.kakao.com/oauth/token
      userInfo-uri: https://kapi.kakao.com/v2/user/me
      tokenInfo-uri: https://kapi.kakao.com/v1/user/access_token_info

# OpenAI API 설정
openai:
  api:
    key: ENC(fz8ote+ZAIBijbMYBGPbn2Pxbh93IlNQcHb0TAvuk8M52P6lD5T5ezendIFcEilF3aw/YhrxSsLHGHAMOwuXdsvDOYUktSoReWYnXexcwFn7MnqMnUMiRa4oosLQBUgB0zb4kJoFt6z6Zw6HplODQDddvctMpu8FGIqyOeyd1MtoCWI1MP0Ghh+6FVaI4z7WFBtrxl+Qe4TSPKy4fOn6AA==)

# lilys API 설정
lilys:
  api-key: ENC(UMiJmNYVIIwMVMCfwlymGOt/6ppVehji3bANfh/qwllbUZ8q1FxvTA+nDPEJeCIgf1xzelv/skXX0pUlUFEFYA==)

# 시스템 설정
firb:
  system:
    name: AI Playground

# -----------------------------------------
# 로컬 개발 환경 (Local) 프로필
# -----------------------------------------
---
spring:
  config:
    activate:
      on-profile: local

  # 데이터베이스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: ENC(a9kmyru0mNZrTfwf0z64qo7Lgyix8+tDmemruOdv1cIXZojMOo8dNhqzOPxz6++wUeVgskt02e/EZW3dwcMYbrnYj7f3BUaAY8zW+obD77A=)
    username: ENC(7hxyFwQ8LzNDka98TeYQKEdeBi0VUM1ZmQ8Is7Kv7Wc=)
    password: ENC(KTnBw2HbIBx75vyJBnu0Pu3A9udPxZ1iA2cvqepwQjUN5aI4qDmZdjOI+DM/jmbD)
    maximum-pool-size: 10

  # 개발 도구 설정
  devtools:
    restart:
      enabled: ${devRestart:false}
    livereload:
      enabled: true

  # Redis 세션 설정 (주석 처리)
  # session:
  #   store-type: redis
  #   redis:
  #     flush-mode: on-save
  # redis:
  #   port: 6379
  #   host: localhost

# 쿠키 설정
cookie:
  secure: false
  site: "Strict"

# 로컬 환경 로깅 설정
logging:
  config: classpath:logback/logback-local.xml

# OAuth2 리다이렉트 URL 설정
oauth2:
  user:
    kakao:
      link-redirect: http://local.firzzle.site/api/v1/oauth2/link/kakao
      login-redirect: http://local.firzzle.site/api/v1/oauth2/login/kakao

# 서버 포트 설정
server:
  port: 8989

# 내부 인터페이스 설정 (주석 처리)
# internal-interface:
#   baseUrl: http://localhost:8080

# -----------------------------------------
# 개발 서버 환경 (Dev) 프로필
# -----------------------------------------
#---
#spring:
#  config:
#    activate:
#      on-profile: dev
#
#  # 데이터베이스 설정
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    jdbc-url: ENC(UYAwl793qQShi9S29ljdTmOQjBjt9TPhZbOV6Dw0btdp6sNL536EfFh5rJ1QI9BwdVIQluTsIhTYPAJxSYZjlAhEbJoJl6LWaMsH5aJryXZNxJeVNPTL+9nra00UA4UUyPskaZ2P8DAJ830yTOKSkpr2tWKeLmybVqZy6Vg+wxw4lbDU+8ANAFQqmP/W5KH4)
#    username: ENC(o66J4lz0TjcbzbWLxytILomFpp8VFqjni5hbrICOMbw=)
#    password: ENC(ggY+7SGqs1+zXv5XLwZbrrGLVrttS/8zjOpmyzKpgcQ=)
#    maximum-pool-size: 10
#
#  # Redis 세션 설정 (주석 처리)
#  # session:
#  #   store-type: redis
#  #   redis:
#  #     flush-mode: on-save
#  # redis:
#  #   port: 6379
#  #   host: 192.168.0.188
#  #   password: ENC(tWkWOuuxO50MCKDig4lVm6p/vV5+OLA1eQqbOLfX9So=)
#
## SQL 로깅 설정
#decorator:
#  datasource:
#    p6spy:
#      enable-logging: true
#
## 로깅 설정
#logging:
#  config: classpath:logback/logback-dev.xml
#
## OAuth2 설정
#oauth2:
#  user:
#    kakao:
#      link-redirect: https://dev-firz2.firzzle.site:8443/api/v1/oauth2/link/kakao
#      login-redirect: https://dev-firz2.firzzle.site:8443/api/v1/oauth2/login/kakao
#
#
## 서버 포트 설정
#server:
#  port: 8989
#
## 내부 인터페이스 설정 (주석 처리)
## internal-interface:
##   baseUrl: http://192.168.0.188:30080
#
## -----------------------------------------
## 운영 서버 환경 (Production) 프로필
## -----------------------------------------
#---
#spring:
#  config:
#    activate:
#      on-profile: production
#
#  # 데이터베이스 설정
#  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    jdbc-url: jdbc:mysql://db-o0v1h.vpc-cdb.ntruss.com:3306/firzzle-plus?allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
#    username: ENC(+YkkQAa8hqrZw1NjDKhMJHZBoDhj2aBZnqgolfe//pA=)
#    password: ENC(jxy3xV3AlQlJDDLJoUukwCH++KGzb0E/+BmZ67QnS80=)
#    maximum-pool-size: 20
#
#  # Redis 세션 설정 (주석 처리)
#  # session:
#  #   store-type: redis
#  #   redis:
#  #     flush-mode: on-save
#  # redis:
#  #   port: 6379
#  #   host: redisc-o0uqr.vpc-cdb.ntruss.com
#
## SQL 로깅 설정
#decorator:
#  datasource:
#    p6spy:
#      enable-logging: true
#
## 로깅 설정
#logging:
#  config: classpath:logback/logback-production.xml
#
## OAuth2 설정
#oauth2:
#  user:
#    kakao:
#      link-redirect: https://www.firzzleplus.com/api/v1/oauth2/link/kakao
#      login-redirect: https://www.firzzleplus.com/api/v1/oauth2/login/kakao
#
#
## 서버 포트 설정
#server:
#  port: 8989
#
## 내부 인터페이스 설정 (주석 처리)
## internal-interface:
##   baseUrl: http://10.0.12.6