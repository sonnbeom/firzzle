plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.firzzle'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext['jjwtVersion'] = '0.12.6'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	// 프로젝트 의존성
	implementation project(':common')
	implementation project(':jwt')

	// Spring Security와 OAuth2 의존성
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// JWT
	implementation "io.jsonwebtoken:jjwt-api:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwtVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwtVersion}"

	// Web & API
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// MyBatis 관련 의존성 추가
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.1'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// Hibernate Core만 추가 P6spy formstyle을 위함
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Eureka Client
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

	// OpenAPI/Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.6'

	//jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'
	implementation 'org.bouncycastle:bcprov-jdk15on:1.69'

	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

// 모듈의 build.gradle
processResources {
	// common 모듈의 리소스를 현재 모듈의 리소스로 복사

	// messages
	from project(':common').sourceSets.main.resources.matching {
		include 'messages/**'  // messages 디렉토리 아래의 모든 파일을 복사
	}

	// logback
	from project(':common').sourceSets.main.resources.matching {
		include 'logback/**'  // logback 디렉토리 아래의 모든 파일을 복사
	}

	// mapper/common
	from project(':common').sourceSets.main.resources.matching {
		include 'mapper/common/**'  // mapper/common 디렉토리 아래의 모든 파일을 복사
	}

	// 개별 파일 복사
	from project(':common').sourceSets.main.resources.matching {
		include 'banner.txt'
		include 'log4jdbc.log4j2.properties'
		include 'spy.properties'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	enabled = true  // 서비스는 실행 가능한 jar 생성
}

jar {
	enabled = false  // bootJar를 사용하므로 일반 jar는 비활성화
}